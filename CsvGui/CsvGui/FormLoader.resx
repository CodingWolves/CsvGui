<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FilePathDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GBhMGv8fDW3CvRkeAKEAAAAASUVORK5CYII=
</value>
  </data>
</root>